def simple_math_neon_sched(n: size, x: R[n] @ DRAM, y: R[n] @ DRAM):
    for io in seq(0, n / 4):
        xVec: R[4] @ Neon
        neon_vld_4xf32(xVec[0:4], x[4 * io:4 + 4 * io])
        yVec: R[4] @ Neon
        neon_vld_4xf32(yVec[0:4], y[4 * io:4 + 4 * io])
        xy: R[4] @ Neon
        neon_vmul_4xf32(xy[0:4], xVec[0:4], yVec[0:4])
        neon_vmul_4xf32(xVec[0:4], xy[0:4], yVec[0:4])
        neon_vst_4xf32(x[4 * io:4 + 4 * io], xVec[0:4])
    if n % 4 > 0:
        for ii in seq(0, n % 4):
            x[ii + n / 4 *
              4] = x[ii + n / 4 * 4] * y[ii + n / 4 * 4] * y[ii + n / 4 * 4]